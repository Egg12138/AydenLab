<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://https://github.com/Egg12138</id>
    <title>Gridea</title>
    <updated>2021-02-25T05:41:03.633Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://https://github.com/Egg12138"/>
    <link rel="self" href="https://https://github.com/Egg12138/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://https://github.com/Egg12138/images/avatar.png</logo>
    <icon>https://https://github.com/Egg12138/favicon.ico</icon>
    <rights>All rights reserved 2021, Gridea</rights>
    <entry>
        <title type="html"><![CDATA[Operating System|| Compiler]]></title>
        <id>https://https://github.com/Egg12138/post/operating-systemor-compiler/</id>
        <link href="https://https://github.com/Egg12138/post/operating-systemor-compiler/">
        </link>
        <updated>2021-02-24T15:27:48.000Z</updated>
        <content type="html"><![CDATA[<h4 id="centera-little-section-qdynamic-languageqcenter"><center>A little section: <q>Dynamic Language</q>.</center></h4>
<blockquote> <br />The Python compiler knows relatively little about the effect the bytecode will have. It's up to the interpreter to determine the type of the object that BINARY_MODULO is operating on and do the right thing for that type. <br />This is why Python is described as dynamically typed: you don't know the types of the arguments to this function until you actually run it.  By contrast, in a language that's statically typed, the programmer tells the compiler up front what type the arguments will be (or the compiler figures them out for itself).</blockquote>
<p>Before the interpreter takes over,Python performs three other steps:</p>
<ul>
<li>Lexing</li>
<li>Parsing</li>
<li>Compiling</li>
</ul>
<blockquote><br />Python is often called an "interpreted" language like Ruby or Perl, as opposed to a "compiled" language like C or Rust. However, this terminology isn't as precise as it may seem. Most interpreted languages, including Python, do involve a compilation step. The reason Python is called "interpreted" is that the compilation step does relatively less work (and the interpreter does relatively more) than in a compiled language. As we'll see later, the Python compiler has much less information about the behavior of a program than a C compiler does.</blockquote>
<h4 id="a-tiny-python-interpreter-in-python-500-lines-or-less">A Tiny Python Interpreter in Python (500 lines or less)</h4>
<p>three instructions:<br>
<code>LOAD_VALUE</code><br>
<code>ADD_TWO_VALUES</code><br>
<code>PRINT_ANSWER</code><br>
It's a <em>stack</em> machine, which must manipulate stacks to add two numbers</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Parity-Time-symmetric与WPT]]></title>
        <id>https://https://github.com/Egg12138/post/parity-time-symmetric-yu-wpt/</id>
        <link href="https://https://github.com/Egg12138/post/parity-time-symmetric-yu-wpt/">
        </link>
        <updated>2021-02-12T13:01:04.000Z</updated>
        <content type="html"><![CDATA[<h3 id="ptsymmetric">PTsymmetric</h3>
<p>P operator:<br>
T operator</p>
<p>y = sinx + 1和y=0的关系就是conventional coupled system中gain/loss的大致关系<br>
y = sinx + 1和y = -sin0.5x的关系就像是PTsymmetric system中gain/loss的大致关系<br>
所以我们可以找到</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>=</mo><mrow><mi mathvariant="normal">a</mi><mi mathvariant="normal">r</mi><mi mathvariant="normal">c</mi></mrow><mi>cos</mi><mo>⁡</mo><mfrac><mrow><mn>1</mn><mo>±</mo><msqrt><mn>33</mn></msqrt></mrow><mn>8</mn></mfrac><mtext>时最大</mtext></mrow><annotation encoding="application/x-tex">x=\mathrm{arc}\cos \frac{1\pm \sqrt{33}}{8}\text{时最大}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.27022em;vertical-align:-0.686em;"></span><span class="mord"><span class="mord mathrm">a</span><span class="mord mathrm">r</span><span class="mord mathrm">c</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">cos</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5842200000000002em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">8</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">±</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.90722em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord">3</span><span class="mord">3</span></span></span><span style="top:-2.86722em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.13278em;"><span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord text"><span class="mord cjk_fallback">时最大</span></span></span></span></span></span></p>
<p>就不必追求到gain的最值处，或者 loss的最小处了。</p>
<h3 id="wpt技术">WPT技术</h3>
<ul>
<li>经典WPT技术：MCT-WPT</li>
</ul>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mi>C</mi><mi>T</mi><mo>−</mo><mi>W</mi><mi>P</mi><mi>T</mi><mspace linebreak="newline"></mspace><msub><mi>P</mi><mi>L</mi></msub><mtext> </mtext><mtext> </mtext><mo>=</mo><mtext> </mtext><mtext> </mtext><msup><mrow><mo fence="true">∣</mo><mfrac><mrow><mi>ω</mi><mi>k</mi><msqrt><mrow><msub><mi>L</mi><mi>T</mi></msub><msub><mi>L</mi><mi>R</mi></msub></mrow></msqrt><msub><mi>I</mi><mi>T</mi></msub></mrow><mrow><msub><mi>R</mi><mi>R</mi></msub><mo>+</mo><msub><mi>R</mi><mi>L</mi></msub></mrow></mfrac><mo fence="true">∣</mo></mrow><mn>2</mn></msup><msub><mi>R</mi><mi>L</mi></msub><mtext> </mtext><mtext> </mtext><mo>∝</mo><msup><mrow><mo fence="true">(</mo><mi>ω</mi><mi>k</mi><mo fence="true">)</mo></mrow><mn>2</mn></msup><mo separator="true">,</mo><mi>ω</mi><mtext>为电源角频率，</mtext><mi>k</mi><mtext>为耦合系数</mtext><mspace linebreak="newline"></mspace><mtext>要达到：</mtext><msub><mi>ω</mi><mrow><mi>S</mi><mi>o</mi><mi>u</mi><mi>r</mi><mi>c</mi><mi>e</mi></mrow></msub><mo>=</mo><msub><mi>ω</mi><mrow><mi>T</mi><mi>r</mi><mi>a</mi><mi>n</mi><mi>s</mi><mi>f</mi><mi>e</mi><mi>r</mi></mrow></msub><mo>=</mo><msub><mi>ω</mi><mrow><mrow><mi mathvariant="normal">R</mi><mi mathvariant="normal">e</mi></mrow><mi>c</mi><mi>e</mi><mi>i</mi><mi>v</mi><mi>e</mi></mrow></msub><mo>=</mo><msub><mi>ω</mi><mn>0</mn></msub><mo separator="true">;</mo><mspace linebreak="newline"></mspace><mi>η</mi><mo>=</mo><mfrac><msub><mi>P</mi><mi>L</mi></msub><mrow><mi mathvariant="normal">Σ</mi><mi>P</mi></mrow></mfrac><mo>=</mo><mfrac><msub><mi>R</mi><mi>L</mi></msub><mrow><mrow><mo fence="true">(</mo><msub><mi>R</mi><mi>R</mi></msub><mo>+</mo><msub><mi>R</mi><mi>L</mi></msub><mo fence="true">)</mo></mrow><mrow><mo fence="true">[</mo><mfrac><mrow><msub><mi>R</mi><mi>T</mi></msub><mrow><mo fence="true">(</mo><msub><mi>R</mi><mi>R</mi></msub><mo>+</mo><msub><mi>R</mi><mi>L</mi></msub><mo fence="true">)</mo></mrow></mrow><mrow><msub><mi>L</mi><mi>T</mi></msub><msub><mi>L</mi><mi>R</mi></msub></mrow></mfrac><mfrac><mn>1</mn><msup><mrow><mo fence="true">(</mo><mi>ω</mi><mi>k</mi><mo fence="true">)</mo></mrow><mn>2</mn></msup></mfrac><mo>+</mo><mn>1</mn><mo fence="true">]</mo></mrow></mrow></mfrac><mo>=</mo><mfrac><mn>1</mn><mrow><mrow><mo fence="true">(</mo><mn>1</mn><mo>+</mo><mfrac><msub><mi>R</mi><mi>L</mi></msub><msub><mi>R</mi><mi>R</mi></msub></mfrac><mo fence="true">)</mo></mrow><mrow><mo fence="true">[</mo><mfrac><mrow><msub><mi>R</mi><mi>T</mi></msub><mrow><mo fence="true">(</mo><mn>1</mn><mo>+</mo><mfrac><msub><mi>R</mi><mi>L</mi></msub><msub><mi>R</mi><mi>R</mi></msub></mfrac><mo fence="true">)</mo></mrow></mrow><mrow><msub><mi>L</mi><mi>T</mi></msub><msub><mi>L</mi><mi>R</mi></msub></mrow></mfrac><mfrac><mn>1</mn><msup><mrow><mo fence="true">(</mo><mi>ω</mi><mi>k</mi><mo fence="true">)</mo></mrow><mn>2</mn></msup></mfrac><mo>+</mo><mfrac><mn>1</mn><msub><mi>R</mi><mi>R</mi></msub></mfrac><mo fence="true">]</mo></mrow></mrow></mfrac><mo separator="true">,</mo><mi>w</mi><mi>h</mi><mi>e</mi><mi>n</mi><mrow><mo fence="true">(</mo><msub><mi>R</mi><mi>L</mi></msub><mo>≪</mo><msub><mi>R</mi><mi>R</mi></msub><mo fence="true">)</mo></mrow><mo separator="true">,</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mfrac><msub><mi>R</mi><mi>T</mi></msub><mrow><msub><mi>L</mi><mi>T</mi></msub><msub><mi>L</mi><mi>R</mi></msub></mrow></mfrac><mfrac><mn>1</mn><msup><mrow><mo fence="true">(</mo><mi>ω</mi><mi>k</mi><mo fence="true">)</mo></mrow><mn>2</mn></msup></mfrac></mrow></mfrac><mo>=</mo><mfrac><mrow><msub><mi>L</mi><mi>T</mi></msub><msub><mi>L</mi><mi>R</mi></msub></mrow><msub><mi>R</mi><mi>T</mi></msub></mfrac><msup><mrow><mo fence="true">(</mo><mi>ω</mi><mi>k</mi><mo fence="true">)</mo></mrow><mn>2</mn></msup><mspace linebreak="newline"></mspace><mspace linebreak="newline"></mspace><mspace linebreak="newline"></mspace></mrow><annotation encoding="application/x-tex">MCT-WPT
\\
P_L\,\,=\,\,\left| \frac{\omega k\sqrt{L_TL_R}I_T}{R_R+R_L} \right|^2R_L\,\,\propto  \left( \omega k \right) ^2,\omega \text{为电源角频率，}k\text{为耦合系数}
\\
\text{要达到：}\omega _{Source}=\omega _{Transfer}=\omega _{\mathrm{Re}ceive}=\omega _0;
\\
\eta =\frac{P_L}{\Sigma P}=\frac{R_L}{\left( R_R+R_L \right) \left[ \frac{R_T\left( R_R+R_L \right)}{L_TL_R}\frac{1}{\left( \omega k \right) ^2}+1 \right]}=\frac{1}{\left( 1+\frac{R_L}{R_R} \right) \left[ \frac{R_T\left( 1+\frac{R_L}{R_R} \right)}{L_TL_R}\frac{1}{\left( \omega k \right) ^2}+\frac{1}{R_R} \right]},when\left( R_L\ll R_R \right) ,=\frac{1}{\frac{R_T}{L_TL_R}\frac{1}{\left( \omega k \right) ^2}}=\frac{L_TL_R}{R_T}\left( \omega k \right) ^2
\\

\\

\\

</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span></span><span class="base"><span class="strut" style="height:2.682693em;vertical-align:-0.9500199999999999em;"></span><span class="minner"><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.47398em;"><span style="top:-1.65598em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.26198em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.86798em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-3.47398em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500199999999999em;"><span></span></span></span></span></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5286650000000002em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.851665em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.811665em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.18833500000000003em;"><span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.47398em;"><span style="top:-1.65598em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.26198em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.86798em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-3.47398em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500199999999999em;"><span></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.7326730000000001em;"><span style="top:-3.9815650000000007em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mrel">∝</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.204008em;vertical-align:-0.25em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.954008em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="mord text"><span class="mord cjk_fallback">为电源角频率，</span></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord text"><span class="mord cjk_fallback">为耦合系数</span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord text"><span class="mord cjk_fallback">要达到：</span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">u</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">n</span><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">R</span><span class="mord mathrm mtight">e</span></span><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.04633em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">Σ</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.05035em;vertical-align:-1.69002em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.11em;"><span class="pstrut" style="height:3.15em;"></span><span class="mord"><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">[</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mathdefault mtight">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.00773em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span><span class="minner mtight"><span class="mopen mtight delimcenter" style="top:0em;"><span class="mtight">(</span></span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.00773em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.00773em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span><span class="mclose mtight delimcenter" style="top:0em;"><span class="mtight">)</span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44530499999999995em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.5897799999999997em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="minner mtight"><span class="minner mtight"><span class="mopen mtight delimcenter" style="top:0em;"><span class="mtight">(</span></span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">ω</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight delimcenter" style="top:0em;"><span class="mtight">)</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8574571428571429em;"><span style="top:-2.8971428571428572em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.58522em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">]</span></span></span></span></span><span style="top:-3.38em;"><span class="pstrut" style="height:3.15em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.827em;"><span class="pstrut" style="height:3.15em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.69002em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.679035em;vertical-align:-2.357595em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.11em;"><span class="pstrut" style="height:3.517565em;"></span><span class="mord"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8886359999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.00773em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.410305em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.00773em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44530499999999995em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5175649999999998em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mathdefault mtight">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.720065em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.00773em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span><span class="minner mtight"><span class="mopen sizing reset-size3 size6 mtight delimcenter" style="top:0.07500000000000001em;"><span class="delimsizing size1 mtight"><span class="mtight">(</span></span></span><span class="mord mtight">1</span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0534em;"><span style="top:-2.6559999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3447999999999998em;margin-left:-0.00773em;margin-right:0.1em;"><span class="pstrut" style="height:2.6833299999999998em;"></span><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.33853em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.565307142857143em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3447999999999998em;margin-left:-0.00773em;margin-right:0.1em;"><span class="pstrut" style="height:2.6833299999999998em;"></span><span class="mord mathdefault mtight">L</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.33853em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5858071428571429em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span><span class="mclose sizing reset-size3 size6 mtight delimcenter" style="top:0.07500000000000001em;"><span class="delimsizing size1 mtight"><span class="mtight">)</span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44530499999999995em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.5897799999999997em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="minner mtight"><span class="minner mtight"><span class="mopen mtight delimcenter" style="top:0em;"><span class="mtight">(</span></span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">ω</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight delimcenter" style="top:0em;"><span class="mtight">)</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8574571428571429em;"><span style="top:-2.8971428571428572em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.58522em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.00773em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44530499999999995em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span></span></span><span style="top:-3.747565em;"><span class="pstrut" style="height:3.517565em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-4.194565em;"><span class="pstrut" style="height:3.517565em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.357595em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord mathdefault">h</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≪</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.6852959999999997em;vertical-align:-1.3638559999999997em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.2213640000000003em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8886359999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mathdefault mtight">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.410305em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.00773em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44530499999999995em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.5897799999999997em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="minner mtight"><span class="minner mtight"><span class="mopen mtight delimcenter" style="top:0em;"><span class="mtight">(</span></span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">ω</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight delimcenter" style="top:0em;"><span class="mtight">)</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8574571428571429em;"><span style="top:-2.8971428571428572em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.58522em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3638559999999997em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.19633em;vertical-align:-0.8360000000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.954008em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="mspace newline"></span><span class="mspace newline"></span></span></span></span></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[系统搭建记录]]></title>
        <id>https://https://github.com/Egg12138/post/xi-tong-da-jian-ji-lu/</id>
        <link href="https://https://github.com/Egg12138/post/xi-tong-da-jian-ji-lu/">
        </link>
        <updated>2021-02-12T05:39:52.000Z</updated>
        <content type="html"><![CDATA[<h2 id="wsl-ubuntu">WSL ubuntu</h2>
<p>vim editor中：</p>
<ul>
<li>.以vi 或者是vim开头编辑文件,输入命令之后,进入到编辑状态了。</li>
<li>.要退出,但是不保存,按esc先,然后输入【:q】,回车键即可退出,无法退出,则在【:q!...</li>
<li>.要退出保存的 ,则~                    输入【:wq】,强制保存退出,则输入【:wq!】。</li>
<li>.看到此时已经退出, 在等待命令状态。</li>
<li>.以nano开头编辑文件的,则要退出,按【Ctrl+x】,回车键。如要保存的,则先按【Ctrl+o】,再按【x】退出</li>
</ul>
<h2 id="关于compiler">关于Compiler</h2>
<p>再搭建编译环境中，要考虑到不同的标准下的情况<br>
比如我写了ANSI风格的一个函数<br>
报错=[Error] ld returned 1 exit status，<br>
再编译器中勾选ANSI的标准就可以。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[一些英语注释用的词，组，句]]></title>
        <id>https://https://github.com/Egg12138/post/yi-xie-ying-yu-zhu-shi-yong-de-ci-zu-ju/</id>
        <link href="https://https://github.com/Egg12138/post/yi-xie-ying-yu-zhu-shi-yong-de-ci-zu-ju/">
        </link>
        <updated>2021-02-06T14:39:54.000Z</updated>
        <content type="html"><![CDATA[<p>do these statements，执行这些语句<br>
through the loop once执行一次这个循环，  语句千万不要随便用Sentence！<br>
evaluate X,对X求值<br>
increment只是递增<br>
return to the beginning of the loop,一般略去定冠词:return to beginning of loop</p>
<p>被允许的可用C is not object to ...</p>
<p>见过语法，情况或者其他，最好用encounter</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[C语法基础表达和语句|]]></title>
        <id>https://https://github.com/Egg12138/post/c-yu-fa-ji-chu-orbian-liang/</id>
        <link href="https://https://github.com/Egg12138/post/c-yu-fa-ji-chu-orbian-liang/">
        </link>
        <updated>2021-02-05T16:15:33.000Z</updated>
        <summary type="html"><![CDATA[<p>data object</p>
<p>lvalue, a label, some are modifiable, some are not.<br>
modifiable left-value = object locator value. C11suggested.<br>
rvalue, a real obj in the memories</p>
<p>C标准const限定：</p>
<blockquote>
<pre><code>         关键字const对变量的类型加以限定，使它的值不能被改变。
          const对象一旦创建后其值就不能再改变，所以const对象必须初始化，如下：
  const int i = get_size();  //正确，在运行时初始化
  const int j = 42;  //正确，在编译时初始化
  const int k;  //不正确，k是一个未经初始化的常量
</code></pre>
</blockquote>
<p>运算，操作的对象oper-and,operand称为项，<br>
可以多重赋值:<br>
int j, t, c;<br>
c=t=j=68;  OK,赋值顺序是68--&gt;j,t,c右至左<br>
left-value = operate(l-value0,l-value1,...,l-valueN) ,operate(...)整体依然是个r-value;</p>
<h4 id="对齐宽度">对齐宽度</h4>
<p>abc<br>
1 对齐到C，宽度应该市%3而不是%2<br>
1       $xx此处'&amp;'显然作为字符，1，2，3，4可以为循环体中的算子，%4d ---count是可以的，<br>
2       $xx<br>
3       $xx<br>
4       $xx</p>
<h4 id="截断truncation">截断truncation</h4>
<pre><code>int:5/4 =&gt; 1; 6/3 = &gt; 2, 7/4 =&gt; 1;
float: 7./4 值上= 7./4. =&gt; 1.75(%.2f)
%d \n&quot;,7./4.);报错
%d\n&quot;,7./4);则不报错
</code></pre>
<h4 id="灵活之处">灵活之处</h4>
<p>相比python，C语法更灵活，感觉很棒~</p>
<ul>
<li>递增运算符<br>
<code>while (++shoe &lt; 42)，</code><br>
<code>&lt;=&gt; while (shoe &lt; 42) {........++shoe}</code>//根据下面的，这里判断的是递增后的shoe是否&lt; 42，即鞋码41为最后一个判断。 shoe++ &lt; 42则shoe达到42码时为最后一次循环。</li>
</ul>
 <center> >       即，shoe++会让shoe在与42比较之后再+1  </center>
        **递增、比较与使用的顺序**
        while shoe++ < 45
            printf(shoe)
        ** 此时先比较，(值优先)，再递增==>did第一个完整语句，再传递给printf**
        while shoe < 45
        shoe++
        printf...
<pre><code>    post_incresment
    ``a_post = a++: a_post = previous a and a += 1``,可以保留旧a，有时候返回旧a挺有用的。
    ``pre_b = ++b: pre_b = new_b =b =previous b +1``
    pre_incresment;
</code></pre>
<p>decrement operator同理</p>
<ul>
<li>for语句灵活<br>
for的initialize不一定是赋值语句<br>
for (printf(&quot;xxxx&quot;);test;update)   <strong>update一定是在循环体执行完之后才进行的</strong><br>
<code>for (printf(&quot;A!\n&quot;);ch!='2';)</code><br>
<code>scanf(&quot;%c&quot;,&amp;ch);</code><br>
<code>printf(&quot;I like it!\n&quot;);</code><br>
还可以写成：<br>
<code>for (printf....;ch!=...;scanf(&quot;%c&quot;,&amp;ch))</code> printf(i like it!)<code></code> printf(Label)``<br>
发现输出有问题:</li>
</ul>
<p>A!<br>
Ilike it<br>
[two figures]<br>
I like it!<br>
I like it!<br>
[three figures]<br>
I like it!<br>
I like it<br>
I like it<br>
[fours figs: 1324]<br>
则输出2个Ilikt it，然后输出Label，<br>
可见，这里的sacnf会将输入转化成n个fig<br>
发现bug，是忘了给循环体加入{}:<br>
加入后：<br>
A!<br>
[sacnf   abcs]<br>
I like it!<br>
Current cn is:a I like it!<br>
Current cn is:b I like it!<br>
Current cn is:c I like it!<br>
Current cn is:s I like it!<br>
Current cn is:</p>
]]></summary>
        <content type="html"><![CDATA[<p>data object</p>
<p>lvalue, a label, some are modifiable, some are not.<br>
modifiable left-value = object locator value. C11suggested.<br>
rvalue, a real obj in the memories</p>
<p>C标准const限定：</p>
<blockquote>
<pre><code>         关键字const对变量的类型加以限定，使它的值不能被改变。
          const对象一旦创建后其值就不能再改变，所以const对象必须初始化，如下：
  const int i = get_size();  //正确，在运行时初始化
  const int j = 42;  //正确，在编译时初始化
  const int k;  //不正确，k是一个未经初始化的常量
</code></pre>
</blockquote>
<p>运算，操作的对象oper-and,operand称为项，<br>
可以多重赋值:<br>
int j, t, c;<br>
c=t=j=68;  OK,赋值顺序是68--&gt;j,t,c右至左<br>
left-value = operate(l-value0,l-value1,...,l-valueN) ,operate(...)整体依然是个r-value;</p>
<h4 id="对齐宽度">对齐宽度</h4>
<p>abc<br>
1 对齐到C，宽度应该市%3而不是%2<br>
1       $xx此处'&amp;'显然作为字符，1，2，3，4可以为循环体中的算子，%4d ---count是可以的，<br>
2       $xx<br>
3       $xx<br>
4       $xx</p>
<h4 id="截断truncation">截断truncation</h4>
<pre><code>int:5/4 =&gt; 1; 6/3 = &gt; 2, 7/4 =&gt; 1;
float: 7./4 值上= 7./4. =&gt; 1.75(%.2f)
%d \n&quot;,7./4.);报错
%d\n&quot;,7./4);则不报错
</code></pre>
<h4 id="灵活之处">灵活之处</h4>
<p>相比python，C语法更灵活，感觉很棒~</p>
<ul>
<li>递增运算符<br>
<code>while (++shoe &lt; 42)，</code><br>
<code>&lt;=&gt; while (shoe &lt; 42) {........++shoe}</code>//根据下面的，这里判断的是递增后的shoe是否&lt; 42，即鞋码41为最后一个判断。 shoe++ &lt; 42则shoe达到42码时为最后一次循环。</li>
</ul>
 <center> >       即，shoe++会让shoe在与42比较之后再+1  </center>
        **递增、比较与使用的顺序**
        while shoe++ < 45
            printf(shoe)
        ** 此时先比较，(值优先)，再递增==>did第一个完整语句，再传递给printf**
        while shoe < 45
        shoe++
        printf...
<pre><code>    post_incresment
    ``a_post = a++: a_post = previous a and a += 1``,可以保留旧a，有时候返回旧a挺有用的。
    ``pre_b = ++b: pre_b = new_b =b =previous b +1``
    pre_incresment;
</code></pre>
<p>decrement operator同理</p>
<ul>
<li>for语句灵活<br>
for的initialize不一定是赋值语句<br>
for (printf(&quot;xxxx&quot;);test;update)   <strong>update一定是在循环体执行完之后才进行的</strong><br>
<code>for (printf(&quot;A!\n&quot;);ch!='2';)</code><br>
<code>scanf(&quot;%c&quot;,&amp;ch);</code><br>
<code>printf(&quot;I like it!\n&quot;);</code><br>
还可以写成：<br>
<code>for (printf....;ch!=...;scanf(&quot;%c&quot;,&amp;ch))</code> printf(i like it!)<code></code> printf(Label)``<br>
发现输出有问题:</li>
</ul>
<p>A!<br>
Ilike it<br>
[two figures]<br>
I like it!<br>
I like it!<br>
[three figures]<br>
I like it!<br>
I like it<br>
I like it<br>
[fours figs: 1324]<br>
则输出2个Ilikt it，然后输出Label，<br>
可见，这里的sacnf会将输入转化成n个fig<br>
发现bug，是忘了给循环体加入{}:<br>
加入后：<br>
A!<br>
[sacnf   abcs]<br>
I like it!<br>
Current cn is:a I like it!<br>
Current cn is:b I like it!<br>
Current cn is:c I like it!<br>
Current cn is:s I like it!<br>
Current cn is:</p>
<!-- more -->
<p>那么显然是声明时没有声明为数组……<br>
于是声明修改<br>
char ch[4]加上scanf(&quot;%s&quot;,ch)在<strong>c的ISO中数组名就代表该数组的起始地址</strong><br>
混乱：<br>
dev-c++的TDM-GC 4.9.2下，<br>
n = 3<br>
<code>y = n++ + n++;</code><br>
<code>printf(&quot;Now,y = %d, n = %d&quot;,y,n);</code><br>
<code>y = n++ + ++n;</code><br>
<code>printf(&quot;Now,y = %d, n = %d&quot;,y,n);</code><br>
output:<br>
y = 7(3+4), n =5<br>
y=12(5+7),n=7，都是比previous n大了2，<br>
可以看到再一个地方，编译器递增完立刻使用n，然后继续下一个递增。但是再别的编译器旧不一样了。这个结果C标准没定义，<br>
<strong>要避开这种混乱，Don't be too clever!</strong><br>
这就是这种混乱的没有完整表达式的语句的问题4-</p>
<!-- more -->
<h4 id="变量初始化">变量初始化</h4>
<p>int sec; scanf%d==&gt;sec; while(sec &gt;0)[..scanf%d=sec]<br>
这是很标准的方式，若不对sec进行初始化，int sec后，sec的垃圾值恰好就是0，直接都不会进入循坏！<br>
所以要么<br>
* int sec = a number&gt;0<br>
* 再while前面再添sacnf</p>
<h4 id="io">I/O</h4>
<p>回车也是算input<br>
在一个loop内，scanf--&gt; count++<br>
但是scanf会读取我两个字符，导致一个loop内，count会递增两次！</p>
<h5 id="缓冲">缓冲</h5>
<p>从键盘输入的所有字符被存到一个缓冲区,在调用getchar,getch,getche,scanf等函数时,电脑从这个缓冲区取,而不一定正好是在这个时候键盘输入的.(如果上次从键盘的输入和程序中要求的内容不一致时).清空之后,就是直接从这个时候由键盘输入的字符中读取了.</p>
<ul>
<li>fflush(stdin);（放在input之前就行，但是可能有的标准里没有这个语法，但不会报错）</li>
<li>getchar()单个地读取缓冲区的数据，在inut之前插入getchar();或使用while((getchar())!='\n');读取缓冲区字符直到结束后丢弃</li>
</ul>
<p>看</p>
<ul>
<li>Situation 0直接get &amp; put<br>
<code>#include &lt;stdio.h&gt;</code><br>
<code>int main(void)</code><br>
<code>{</code><br>
<code>char c;</code><br>
<code>c = getchar();</code><br>
<code>putchar(c);</code></li>
</ul>
<p><code>system(&quot;pause&quot;);</code></p>
<p><code>return 0;</code><br>
<code>}</code><br>
IO和运行，<br>
123as<br>
1请按任意键继续. . .<br>
这段程序只会从键盘里读取一个字符<br>
整个过程大概如下：<br>
keyboard Input&quot;123as+Enter&quot;--&gt; Buffer : &quot;123as+Enter&quot; --getchar() read &quot;1&quot;--&gt;Assignment &quot;1&quot; to c --&gt; Putchar c onto screen  --&gt; release &quot;1&quot;, leaving &quot;23as+Enter&quot; in the Buffer.</p>
<ul>
<li>Situation 1在循环体中，看上面一例的细节<br>
<code>char c;</code><br>
<code>printf(&quot;The test is beginning&quot;);</code></li>
</ul>
<p><code>while ((c = getchar())!='3')</code><br>
<code>{</code>  putchar(c);<code></code>  }``</p>
<p><code>system(&quot;pause&quot;);</code></p>
<p>结果：<br>
The test is beginning<br>
2<br>
&gt;2<br>
22<br>
&gt;22<br>
11<br>
&gt;11<br>
1256456<br>
&gt;1256456<br>
123<br>
&gt;12请按任意键继续. . .很显然这里执行的显然是”伪整体读取“，”仍然是<br>
getchar()会从输入缓冲区去读取内容，也就是说我们把所有的内容都输入完成（输入完成之前就已经在缓冲区了，不需要等待Enter）并且按下了Enter键后，while循环才开始工作，每一次getchar()从输入缓冲区读取一个字符，然后如果不是换行符就输出。</p>
<p>另一说法：<br>
当我们输入txt的时候，不必去考虑如何分割开这些东西<br>
我们的程序算法是<br>
while (input != STOP sign)<br>
{<br>
words++;/<em>这个是递增符</em>/<br>
然后判断input这个单字母是否有特殊情况<br>
}</p>
<h5 id="三类缓冲区类型">三类缓冲区类型</h5>
<ul>
<li>全缓冲；</li>
<li>行缓冲；</li>
<li>无缓冲；</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[线性表复习|inPy]]></title>
        <id>https://https://github.com/Egg12138/post/xian-xing-biao-fu-xi-or-in-py/</id>
        <link href="https://https://github.com/Egg12138/post/xian-xing-biao-fu-xi-or-in-py/">
        </link>
        <updated>2021-01-30T13:25:28.000Z</updated>
        <summary type="html"><![CDATA[<h2 id="先复习数组">先复习数组</h2>
<p>int score[10]建了一个10容量的整型数组<br>
for   idx=0,idx++<br>
printf score[idx]<br>
注意到score[0]默认值为-1，（gcc4.9.2下）<br>
scanf的一些易错：</p>
<ul>
<li>scanf(&quot;%d\n&quot;,&amp;a) ,scanf()中不允许使用换行</li>
<li>scanf(%7.2f,&amp;a),scanf()中不允许控制精度</li>
<li>scanf(&quot;%d&quot;,a),scanf()忘记加取d地址运算符</li>
<li>scanf(&quot;a=%d&quot;,&amp;a),scanf的一般格式 scanf(格式控制字符串，参数地址表)，所以不能在%d前面加a<br>
使用单链表（ex_13)<br>
这次没有顺序表的表演了</li>
</ul>
<h3 id="线性表">线性表</h3>
<h4 id="顺序表">顺序表</h4>
<h4 id="链表linkedlist">链表LinkedList</h4>
<p>在不连续的地址之间</p>
]]></summary>
        <content type="html"><![CDATA[<h2 id="先复习数组">先复习数组</h2>
<p>int score[10]建了一个10容量的整型数组<br>
for   idx=0,idx++<br>
printf score[idx]<br>
注意到score[0]默认值为-1，（gcc4.9.2下）<br>
scanf的一些易错：</p>
<ul>
<li>scanf(&quot;%d\n&quot;,&amp;a) ,scanf()中不允许使用换行</li>
<li>scanf(%7.2f,&amp;a),scanf()中不允许控制精度</li>
<li>scanf(&quot;%d&quot;,a),scanf()忘记加取d地址运算符</li>
<li>scanf(&quot;a=%d&quot;,&amp;a),scanf的一般格式 scanf(格式控制字符串，参数地址表)，所以不能在%d前面加a<br>
使用单链表（ex_13)<br>
这次没有顺序表的表演了</li>
</ul>
<h3 id="线性表">线性表</h3>
<h4 id="顺序表">顺序表</h4>
<h4 id="链表linkedlist">链表LinkedList</h4>
<p>在不连续的地址之间</p>
<!-- more -->
<p>A,B,C三个nodes之间有链接<br>
Using the classical strategies:<br>
是address而不是ptr！<br>
[[Value]]&amp;[[add, like 0x34]] ---&gt;---[[Value1]]&amp;[[add1]]---&gt;---[[Value2]]&amp;[[add2]]--&gt;---[[Void]]&amp;[[ending]], Value or Element<br>
单（向）链表，由指向add的ptr就可以得到整条链</p>
<h5 id="单链表">单链表</h5>
<p>operations:<br>
* is_empty()<br>
* len()<br>
* travel()<br>
* add(item)<br>
* append(x)<br>
* insert(pos<br>
* rm(x)<br>
* find(x),   the x is the node.</p>
<pre><code>calss aNode
    elem
    Next

node1: 
    elem=10
    next--point--&gt;node2
node2:
    elem=20
    next--point--&gt;node3
</code></pre>
<h3 id="address-in-py">address in py!</h3>
<p>a,b = b, a   a  tuple!<br>
内存不变，只是a,b所指的地址变化。like ptr...<br>
但是在C中，ab的指定就是对象本身</p>
<!-- more -->
<p>手动实现list obj的功能，<br>
原理很简单了。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[自动化测试初步]]></title>
        <id>https://https://github.com/Egg12138/post/zi-dong-hua-ce-shi-chu-bu/</id>
        <link href="https://https://github.com/Egg12138/post/zi-dong-hua-ce-shi-chu-bu/">
        </link>
        <updated>2021-01-30T13:25:28.000Z</updated>
        <summary type="html"><![CDATA[<p>使用单链表（ex_13)</p>
]]></summary>
        <content type="html"><![CDATA[<p>使用单链表（ex_13)</p>
<!-- more -->
<p>来完成</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[脑洞|UNO变体规则]]></title>
        <id>https://https://github.com/Egg12138/post/nao-dong-oruno-bian-ti-gui-ze/</id>
        <link href="https://https://github.com/Egg12138/post/nao-dong-oruno-bian-ti-gui-ze/">
        </link>
        <updated>2021-01-29T16:08:17.000Z</updated>
        <content type="html"><![CDATA[<p>首先，以下规则均出于增加游戏趣味性和难度的目的而作出的。<br>
将会使用一些概念：</p>
<table>
<thead>
<tr>
<th>概念</th>
<th>对象</th>
<th>具体内涵</th>
</tr>
</thead>
<tbody>
<tr>
<td>叠加</td>
<td>效果或牌</td>
<td>在上家的牌（或效果）生效前，打出符合（变体）规则的牌（或效果），并将这一系列牌的目标转移到下家</td>
</tr>
<tr>
<td>连对</td>
<td>一个玩家</td>
<td>将同一张牌打出多张</td>
</tr>
<tr>
<td>交换</td>
<td>交换效果目标（目标不一定是玩家持有的手牌）</td>
<td>将符合条件的牌（手牌，等）与目标</td>
</tr>
<tr>
<td>手牌</td>
<td>牌</td>
<td>玩家手上持有的牌，默认指的是集合，如交换A,B的手牌=交换A,B的所有受众持有的牌</td>
</tr>
<tr>
<td>抽取</td>
<td>牌</td>
<td>从目标区域中获得一定数量的牌</td>
</tr>
<tr>
<td>反转</td>
<td>顺序</td>
<td>一般是玩家出牌顺序</td>
</tr>
<tr>
<td>报警</td>
<td>玩家</td>
<td>喊出UNO的动作</td>
</tr>
<tr>
<td>黑牌</td>
<td>牌</td>
<td>ACE和WILD牌，拥有最高级别自由度的两张牌，两张牌的颜色为“无颜色”</td>
</tr>
<tr>
<td>明牌</td>
<td>牌</td>
<td>牌面朝上的牌</td>
</tr>
</tbody>
</table>
<p>基础规则：</p>
<ul>
<li>Wild
<ul>
<li>如果质疑成功，上家倒摸四张。但但是变色效果始终生效。下家进入正常的行动回合。（出不了依然罚摸）</li>
<li>原则不是完全绝境【只有当没有和当前牌面颜色相同的牌时才能打出，花色同颜色不同的不算】</li>
</ul>
</li>
<li>draw TWO
<ul>
<li>下家罚摸后不能出牌</li>
</ul>
</li>
<li>基本回合不出牌时，罚摸的牌不能打出</li>
<li>solo时反转作为禁止</li>
</ul>
<p>村规</p>
<ul>
<li>黑牌不能作最后一张牌</li>
<li>solo时</li>
</ul>
<h3 id="叠加类变体">叠加类变体</h3>
<h4 id="centerncenter"><center>*n</center></h4>
<blockquote>
<p>连对规则被引入游戏时，连对规则在叠加规则发动时不生效！（当手上有多张+2时，在叠加的环节，最多仍然只能出1张+2牌。）</p>
</blockquote>
<p>同花色的功能牌，可以叠加。生效于最后一名玩家</p>
<table>
<thead>
<tr>
<th>具体牌</th>
<th>特殊效果</th>
</tr>
</thead>
<tbody>
<tr>
<td>+2n</td>
<td>略</td>
</tr>
<tr>
<td>禁</td>
<td></td>
</tr>
<tr>
<td>+4</td>
<td></td>
</tr>
</tbody>
</table>
<h3 id="量的变体">量的变体</h3>
<h4 id="更多选择xx默认为106x13">更多选择（x),x默认为10，6&lt;x&lt;13,</h4>
<p>玩家初始可以摸x张牌，可以观察后弃掉0-n张明牌，但最后的开局手牌数不得小于7<br>
注意：在洗牌之前，这些被弃的牌都要摆放好，方便部分玩家记牌</p>
<h3 id="玩家能力变体">玩家能力变体</h3>
<p>为了保留游戏的简洁性，不引入复杂的角色技能这样的玩法。<br>
而是引入几个小变体，将这些变体作为玩家的技能。选中技能的玩家才能使用该变体能力，在发动能力的时候需要说明。</p>
<p>包括：</p>
<ul>
<li>反转重铸</li>
<li>更多选择(12)</li>
<li></li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[|UNO变体规则]]></title>
        <id>https://https://github.com/Egg12138/post/oruno-bian-ti-gui-ze/</id>
        <link href="https://https://github.com/Egg12138/post/oruno-bian-ti-gui-ze/">
        </link>
        <updated>2021-01-29T16:08:17.000Z</updated>
        <content type="html"><![CDATA[<p>首先，以下规则均出于增加游戏趣味性和难度的目的而作出的。<br>
将会使用一些概念：</p>
<table>
<thead>
<tr>
<th>概念</th>
<th>对象</th>
<th>具体内涵</th>
</tr>
</thead>
<tbody>
<tr>
<td>叠加</td>
<td>效果或牌</td>
<td>在上家的牌（或效果）生效前，打出符合（变体）规则的牌（或效果），并将这一系列牌的目标转移到下家</td>
</tr>
<tr>
<td>连对</td>
<td>牌</td>
<td>将同一张牌打出多张</td>
</tr>
<tr>
<td>交换</td>
<td>交换效果目标（目标不一定是玩家持有的手牌）</td>
<td>将符合条件的牌（手牌，等）与目标</td>
</tr>
<tr>
<td>手牌</td>
<td>牌</td>
<td>玩家手上持有的牌，默认指的是集合，如交换A,B的手牌=交换A,B的所有受众持有的牌</td>
</tr>
<tr>
<td>抽取</td>
<td>牌</td>
<td>从目标区域中获得一定数量的牌</td>
</tr>
<tr>
<td>反转</td>
<td>顺序</td>
<td>一般是玩家出牌顺序</td>
</tr>
<tr>
<td>报警</td>
<td>仍在场玩家</td>
<td>喊出UNO的动作</td>
</tr>
<tr>
<td>黑牌</td>
<td>牌</td>
<td>ACE和WILD牌，拥有最高级别自由度的两张牌，两张牌的颜色为“无颜色”</td>
</tr>
<tr>
<td>明牌</td>
<td>牌</td>
<td>牌面朝上的牌</td>
</tr>
</tbody>
</table>
<p>基础规则的一点说明：</p>
<ul>
<li>Wild
<ul>
<li>如果质疑成功，上家倒摸四张。但是变色效果始终生效。下家进入正常的行动回合。（出不了依然罚摸）</li>
<li>原则不是完全绝境【只有当没有和当前牌面颜色相同的牌时才能打出，花色同颜色不同的不算】</li>
</ul>
</li>
<li>draw TWO
<ul>
<li>下家罚摸后不能出牌</li>
</ul>
</li>
<li>基本回合不出牌时，罚摸的牌不能打出</li>
<li>solo时反转作为禁止</li>
</ul>
<p>过去常用的村规</p>
<ul>
<li>黑牌不能作最后一张牌</li>
<li>solo时</li>
</ul>
<h3 id="center叠加类变体center"><center>叠加类变体</center></h3>
<h4 id="center四色功能叠加center"><center>四色功能叠加</center></h4>
<blockquote>
<pre><code>  连对规则被引入游戏时，连对规则在叠加规则发动时不生效！（当手上有多张+2时，在叠加的环节，最多仍然只能出1张+2牌。）
</code></pre>
</blockquote>
<p>同花色的功能牌，可以叠加。生效于最后一名玩家</p>
<table>
<thead>
<tr>
<th>具体牌</th>
<th>特殊效果</th>
</tr>
</thead>
<tbody>
<tr>
<td>+2n</td>
<td>略</td>
</tr>
<tr>
<td>禁</td>
<td>最后一家摸n张，但是</td>
</tr>
<tr>
<td>快乐禁</td>
<td>所有禁放到一堆，最后一家的上家每回合额外将这张牌堆的牌打一张给下家，强制生效不可被叠加，直到打完</td>
</tr>
<tr>
<td>+4</td>
<td></td>
</tr>
</tbody>
</table>
<p>####<center>Wild叠加</center></p>
<blockquote>
<pre><code>  最后一家只能对第一张wild出牌者发出质疑。
</code></pre>
</blockquote>
<h3 id="量的变体">量的变体</h3>
<h4 id="更多选择xx默认为106x13">更多选择（x),x默认为10，6&lt;x&lt;13,</h4>
<p>玩家初始可以摸x张牌，可以观察后弃掉0-n张明牌，但最后的开局手牌数不得小于7<br>
注意：在洗牌之前，这些被弃的牌都要摆放好，方便部分玩家记牌</p>
<h3 id="玩家能力变体">玩家能力变体</h3>
<p>为了保留游戏的简洁性，不引入复杂的角色技能这样的玩法。<br>
而是引入几个小变体，将这些变体作为玩家的技能。选中技能的玩家才能使用该变体能力，在发动能力的时候需要说明。</p>
<p>包括：</p>
<ul>
<li>反转重铸</li>
<li>更多选择(12)</li>
<li></li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[raw.githubusercontent.com的DNS污染小状况]]></title>
        <id>https://https://github.com/Egg12138/post/rawgithubusercontentcom-de-dns-wu-ran-xiao-zhuang-kuang/</id>
        <link href="https://https://github.com/Egg12138/post/rawgithubusercontentcom-de-dns-wu-ran-xiao-zhuang-kuang/">
        </link>
        <updated>2021-01-24T16:45:44.000Z</updated>
        <content type="html"><![CDATA[<p>175.44.115.198是我当时的ip<br>
在hosts中add:<br>
175.44.115.198 raw.githubusercontent.com</p>
<p>因为PC上的vpn太慢了，手机端的浏览器不能提取url的文件。所以只能从pc搞。<br>
不翻墙，只能改hosts。</p>
]]></content>
    </entry>
</feed>